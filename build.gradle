

plugins {
	id 'org.springframework.boot' version '2.1.2.RELEASE'
	id 'com.bmuschko.docker-spring-boot-application' version '4.9.0'
	id 'java'
}
repositories {
	mavenCentral()
}
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.bmuschko.docker-spring-boot-application'

//apply plugin: 'com.bmuschko.docker-spring-boot-application'
group = 'com.lgh'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext{
	docker_ports=[8708]
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

docker {
	dockerCreateDockerfile {
		environmentVariable('LANG', 'C.UTF-8')
		defaultCommand     '-Dfile.encoding=UTF-8'
	}
	url = 'http://localhost:2375'

	registryCredentials {
        url = project.properties.getOrDefault('registryUrl', 'http://127.0.0.1:5000')
        username = project.properties.getOrDefault('username', 'docker')
        password = project.properties.getOrDefault('password', 'password')
        //gradle -PdockerUrl=.. -PcertPath=.. dockerBuildImage
    }
	springBootApplication {
		baseImage = 'openjdk:8-jdk-alpine'
		afterEvaluate {
			ports = docker_ports;
			/*+ project.group.replaceAll("\\.", "/")*/
			tag = project.properties.getOrDefault('tagUrl', '192.168.10.129:5000')   + "/" + project.name.toLowerCase() + ":" + project.version
		}
	}


}
